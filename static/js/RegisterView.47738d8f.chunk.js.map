{"version":3,"file":"static/js/RegisterView.47738d8f.chunk.js","mappings":"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","sources":["components/FormWrapper&Submit/FormWrapper.styled.js","components/buttons/ContainedButton.jsx","components/FormWrapper&Submit/FormWrapper.jsx","components/labels/EmailLabel.jsx","components/labels/NameLabel.jsx","components/labels/PasswordLabel.jsx","components/RegisterForm/RegisterForm.jsx","views/public/RegisterView.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.form`\ndisplay: flex;\nflex-direction:column;\nalign-items:center;\n\n`\n\nexport const FormButton = styled.button`\nwidth:25px;\nheight: 25px;\npadding: 0;\nmargin:3px;\nborder-radius:50px;\noutline:none;\nborder:none;\noverflow:hidden;\ncursor: pointer;\nbackground-color:#b1bbdb\n`","import Button from '@mui/material/Button';\nimport propTypes from 'prop-types';\n\nexport default function ContainedButton({ children, onClick }) {\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={onClick}\n      sx={{ mr: 1, ml: 1, mt: 1 }}\n      type=\"submit\"\n    >\n      {children}\n    </Button>\n    // <IconButton\n    //   size=\"large\"\n    //   edge=\"start\"\n    //   color=\"inherit\"\n    //   aria-label=\"menu\"\n    //   sx={{ mr: 1, ml: 1 }}\n    //   onClick={onClick}\n    //   type=\"submit\"\n    // >\n    //   {children}\n    // </IconButton>\n  );\n}\nContainedButton.propTypes = {\n  children: propTypes.node,\n  onClick: propTypes.func,\n};\n","import { Wrapper } from './FormWrapper.styled';\nimport propTypes from 'prop-types';\nimport ContainedButton from 'components/buttons/ContainedButton';\n\nexport function FormWrapper({ children, onSubmit, submitButton }) {\n  return (\n    <Wrapper onSubmit={onSubmit} style={{ marginTop: '120px' }}>\n      {children}\n      <ContainedButton>{submitButton}</ContainedButton>\n    </Wrapper>\n  );\n}\nFormWrapper.propTypes = {\n  children: propTypes.any,\n  onSubmit: propTypes.func,\n  submitButton: propTypes.node,\n};\n","import { TextField } from '@mui/material';\nimport propTypes from 'prop-types';\n\nexport default function EmailLabel({ value, onchange }) {\n  return (\n    <TextField\n      id=\"e-mail\"\n      label=\"E-mail\"\n      value={value}\n      variant=\"outlined\"\n      onChange={onchange}\n      title=\"example@mail.com\"\n      type=\"mail\"\n      autoComplete=\"off\"\n      size=\"small\"\n      margin=\"normal\"\n      placeholder=\"anna@mail.com\"\n      inputProps={{\n        pattern: '^[a-zA-Z0-9]+@[a-zA-Z0-9]+.[A-Za-z]+$',\n      }}\n      required\n    />\n  );\n}\n\nEmailLabel.prototype = {\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func,\n};\n","import { TextField } from '@mui/material';\nimport propTypes from 'prop-types';\n\nexport default function NameLabel({ value, onchange }) {\n  return (\n    <TextField\n      id=\"name\"\n      label=\"Name\"\n      value={value}\n      variant=\"outlined\"\n      onChange={onchange}\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      type=\"text\"\n      autoComplete=\"off\"\n      size=\"small\"\n      margin=\"normal\"\n      placeholder=\"Anna Karenina\"\n      inputProps={{\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      }}\n      required\n    />\n  );\n}\nNameLabel.prototype = {\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func,\n};\n","import { TextField } from '@mui/material';\nimport propTypes from 'prop-types';\n\nexport default function PasswordLabel({ value, onchange }) {\n  return (\n    <TextField\n      id=\"password\"\n      label=\"Password\"\n      value={value}\n      variant=\"outlined\"\n      onChange={onchange}\n      title=\"********\"\n      type=\"password\"\n      autoComplete=\"off\"\n      size=\"small\"\n      margin=\"normal\"\n      // inputProps={{\n      //   pattern: '^\\\\+[\\\\(\\\\-]?(\\\\d[\\\\(\\\\)\\\\-]?){11}\\\\d$',\n      //   // '+?d{1,4}?[-.s]?(?d{1,3}?)?[-.s]?d{1,4}[-.s]?d{1,4}[-.s]?d{1,9}',\n      // }}\n      required\n    />\n  );\n}\nPasswordLabel.prototype = {\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { register } from 'redux/auth/authOperations';\nimport { FormWrapper } from 'components/FormWrapper&Submit/FormWrapper';\nimport NameLabel from 'components/labels/NameLabel';\nimport EmailLabel from 'components/labels/EmailLabel';\nimport PasswordLabel from 'components/labels/PasswordLabel';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const userAdder = evt => {\n    evt.preventDefault();\n    const newUser = generateContact(name, email, password);\n    dispatch(register(newUser))\n      ? navigate((location.pathname = '/'))\n      : toast.error(`${name} is already in contacts`);\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  const generateContact = (name, email, password) => {\n    return { name, email, password };\n  };\n\n  return (\n    <FormWrapper onSubmit={userAdder} submitButton=\"Register\">\n      <NameLabel value={name} onchange={e => setName(e.currentTarget.value)} />\n      <EmailLabel value={email} onchange={e => setEmail(e.target.value)} />\n      <PasswordLabel\n        value={password}\n        onchange={e => setPassword(e.target.value)}\n      />\n      <Toaster />\n    </FormWrapper>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nfunction RegisterView() {\n  return <RegisterForm />;\n}\n\nexport default RegisterView;\n"],"names":["Wrapper","styled","ContainedButton","children","onClick","Button","variant","sx","mr","ml","mt","type","FormWrapper","onSubmit","submitButton","style","marginTop","EmailLabel","value","onchange","id","label","onChange","title","autoComplete","size","margin","placeholder","inputProps","pattern","required","prototype","propTypes","NameLabel","PasswordLabel","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","navigate","useNavigate","location","useLocation","generateContact","evt","preventDefault","newUser","register","pathname","toast","e","currentTarget","target"],"sourceRoot":""}