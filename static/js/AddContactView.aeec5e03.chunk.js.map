{"version":3,"file":"static/js/AddContactView.aeec5e03.chunk.js","mappings":"wMAEaA,EAAUC,EAAAA,EAAAA,KAAH,uF,GAOMA,EAAAA,EAAAA,OAAH,8L,kBCNR,SAASC,EAAT,GAAiD,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,QAClD,OACE,SAACC,EAAA,EAAD,CACEC,QAAQ,YACRF,QAASA,EACTG,GAAI,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACxBC,KAAK,SAJP,SAMGR,ICPA,SAASS,EAAT,GAA4D,IAArCT,EAAoC,EAApCA,SAAUU,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,aAChD,OACE,UAACd,EAAD,CAASa,SAAUA,EAAUE,MAAO,CAAEC,UAAW,SAAjD,UACGb,GACD,SAACD,EAAD,UAAkBY,S,+FCLT,SAASG,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACzC,OACE,SAAC,IAAD,CACEC,GAAG,OACHC,MAAM,OACNH,MAAOA,EACPZ,QAAQ,WACRgB,SAAUH,EACVI,MAAM,yIACNZ,KAAK,OACLa,aAAa,MACbC,KAAK,QACLC,OAAO,SACPC,WAAY,CACVC,QAAS,0HAEXC,UAAQ,IAIdZ,EAAUa,UAAY,CACpBZ,MAAOa,IAAAA,OAAAA,WACPT,SAAUS,IAAAA,O,mJCtBG,SAASC,EAAT,GAA0C,IAApBd,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1C,OACE,SAACc,EAAA,EAAD,CACEb,GAAG,QACHC,MAAM,QACNH,MAAOA,EACPZ,QAAQ,WACRgB,SAAUH,EACVI,MAAM,iBACNZ,KAAK,MACLa,aAAa,MACbC,KAAK,QACLC,OAAO,SACPC,WAAY,CACVC,QAAS,0CAEXC,UAAQ,IAKdG,EAAWF,UAAY,CACrBZ,MAAOa,IAAAA,OAAAA,WACPT,SAAUS,IAAAA,M,4CCjBCG,EAAiB,WAC5B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA2BF,EAAAA,EAAAA,UAAS,IAApC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,SAASA,YAE3CC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAIH,EAASI,UACrB,IAAIC,GAAeV,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMU,KAAKC,YAoB7CC,EAAkB,SAACpB,EAAME,GAC7B,MAAO,CAAEF,KAAAA,EAAME,OAAAA,IAGjB,OACE,8BACGe,IACC,UAACzC,EAAA,EAAD,CAAaC,SAjBG,SAAA4C,GACpBA,EAAIC,kBATe,SAAAC,GACnB,IACMC,EADcD,EAAOvB,KACOyB,cAClC,OAAOnB,EAAKoB,MAAK,SAAAH,GAAM,OAAIA,EAAOvB,KAAKyB,gBAAkBD,KACrD,KACApB,GAASuB,EAAAA,EAAAA,IAAYJ,IAMzBK,CADmBR,EAAgBpB,EAAME,IAGrC2B,EAAAA,GAAAA,MAAA,UAAe7B,EAAf,4BADAU,EAAUE,EAASI,SAAW,KAElCf,EAAQ,IACRE,EAAS,KAUiCzB,aAAa,cAAnD,WACE,SAACG,EAAA,EAAD,CAAWC,MAAOkB,EAAMjB,SAAU,SAAAsC,GAAG,OAAIpB,EAAQoB,EAAIS,OAAOhD,WAE5D,SAACc,EAAD,CACEd,MAAOoB,EACPnB,SAAU,SAAAsC,GAAG,OAAIlB,EAASkB,EAAIS,OAAOhD,WAGvC,SAAC,KAAD,UCjDV,MAJA,WACE,OAAO,SAACgB,EAAD","sources":["components/FormWrapper&Submit/FormWrapper.styled.js","components/buttons/ContainedButton.jsx","components/FormWrapper&Submit/FormWrapper.jsx","components/labels/NameLabel.jsx","components/labels/PhoneLabel.jsx","components/AddContactForm/AddContactForm.jsx","views/private/AddContactView.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.form`\ndisplay: flex;\nflex-direction:column;\nalign-items:center;\n\n`\n\nexport const FormButton = styled.button`\nwidth:25px;\nheight: 25px;\npadding: 0;\nmargin:3px;\nborder-radius:50px;\noutline:none;\nborder:none;\noverflow:hidden;\ncursor: pointer;\nbackground-color:#b1bbdb\n`","import Button from '@mui/material/Button';\nimport propTypes from 'prop-types';\n\nexport default function ContainedButton({ children, onClick }) {\n  return (\n    <Button\n      variant=\"contained\"\n      onClick={onClick}\n      sx={{ mr: 1, ml: 1, mt: 1 }}\n      type=\"submit\"\n    >\n      {children}\n    </Button>\n    // <IconButton\n    //   size=\"large\"\n    //   edge=\"start\"\n    //   color=\"inherit\"\n    //   aria-label=\"menu\"\n    //   sx={{ mr: 1, ml: 1 }}\n    //   onClick={onClick}\n    //   type=\"submit\"\n    // >\n    //   {children}\n    // </IconButton>\n  );\n}\nContainedButton.propTypes = {\n  children: propTypes.node,\n  onClick: propTypes.func,\n};\n","import { Wrapper } from './FormWrapper.styled';\nimport propTypes from 'prop-types';\nimport ContainedButton from 'components/buttons/ContainedButton';\n\nexport function FormWrapper({ children, onSubmit, submitButton }) {\n  return (\n    <Wrapper onSubmit={onSubmit} style={{ marginTop: '120px' }}>\n      {children}\n      <ContainedButton>{submitButton}</ContainedButton>\n    </Wrapper>\n  );\n}\nFormWrapper.propTypes = {\n  children: propTypes.any,\n  onSubmit: propTypes.func,\n  submitButton: propTypes.node,\n};\n","import { TextField } from '@mui/material';\nimport propTypes from 'prop-types';\n\nexport default function NameLabel({ value, onchange }) {\n  return (\n    <TextField\n      id=\"name\"\n      label=\"Name\"\n      value={value}\n      variant=\"outlined\"\n      onChange={onchange}\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      type=\"text\"\n      autoComplete=\"off\"\n      size=\"small\"\n      margin=\"normal\"\n      inputProps={{\n        pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n      }}\n      required\n    />\n  );\n}\nNameLabel.prototype = {\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func,\n};\n","import { TextField } from '@mui/material';\nimport propTypes from 'prop-types';\n\nexport default function PhoneLabel({ value, onchange }) {\n  return (\n    <TextField\n      id=\"phone\"\n      label=\"Phone\"\n      value={value}\n      variant=\"outlined\"\n      onChange={onchange}\n      title=\"+3805012345678\"\n      type=\"tel\"\n      autoComplete=\"off\"\n      size=\"small\"\n      margin=\"normal\"\n      inputProps={{\n        pattern: '^\\\\+[\\\\(\\\\-]?(\\\\d[\\\\(\\\\)\\\\-]?){11}\\\\d$',\n      }}\n      required\n    />\n  );\n}\n\nPhoneLabel.prototype = {\n  value: propTypes.string.isRequired,\n  onChange: propTypes.func,\n};\n","import { useState } from 'react';\nimport { FormWrapper } from '../FormWrapper&Submit/FormWrapper';\nimport NameLabel from 'components/labels/NameLabel';\nimport PhoneLabel from 'components/labels/PhoneLabel';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postContact } from 'redux/contacts/contactsOperations';\nimport toast, { Toaster } from 'react-hot-toast';\n\nexport const AddContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.contacts.contacts);\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  console.log(location.pathname);\n  let authSelector = useSelector(state => state.auth.isLoaded);\n\n  const onSubmitForm = result => {\n    const contactName = result.name;\n    const normolizeData = contactName.toLowerCase();\n    return data.find(result => result.name.toLowerCase() === normolizeData)\n      ? null\n      : dispatch(postContact(result));\n  };\n\n  const contactsAdder = evt => {\n    evt.preventDefault();\n    const newContact = generateContact(name, number);\n    onSubmitForm(newContact)\n      ? navigate((location.pathname = '/'))\n      : toast.error(`${name} is already in contacts`);\n    setName('');\n    setPhone('');\n  };\n\n  const generateContact = (name, number) => {\n    return { name, number };\n  };\n\n  return (\n    <>\n      {authSelector && (\n        <FormWrapper onSubmit={contactsAdder} submitButton=\"Add contact\">\n          <NameLabel value={name} onchange={evt => setName(evt.target.value)} />\n\n          <PhoneLabel\n            value={number}\n            onchange={evt => setPhone(evt.target.value)}\n          />\n\n          <Toaster />\n        </FormWrapper>\n      )}\n    </>\n  );\n};\n","import { AddContactForm } from 'components/AddContactForm/AddContactForm';\n\nfunction AddContactView() {\n  return <AddContactForm />;\n}\n\nexport default AddContactView;\n"],"names":["Wrapper","styled","ContainedButton","children","onClick","Button","variant","sx","mr","ml","mt","type","FormWrapper","onSubmit","submitButton","style","marginTop","NameLabel","value","onchange","id","label","onChange","title","autoComplete","size","margin","inputProps","pattern","required","prototype","propTypes","PhoneLabel","TextField","AddContactForm","useState","name","setName","number","setPhone","dispatch","useDispatch","data","useSelector","state","contacts","navigate","useNavigate","location","useLocation","console","log","pathname","authSelector","auth","isLoaded","generateContact","evt","preventDefault","result","normolizeData","toLowerCase","find","postContact","onSubmitForm","toast","target"],"sourceRoot":""}